# Generated by Django 4.2.3 on 2023-07-28 13:04

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Noc_Global_Choices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Empresas',
            fields=[
                ('empresas_pk', models.IntegerField(primary_key=True, serialize=False)),
                ('cod_empresa', models.CharField(db_comment='Código da empresa que será relalcionado com todo sistema', max_length=2, verbose_name='Cod.Empresa')),
                ('cod_filial', models.CharField(db_comment='Código da filial que será relalcionado com todo sistema', max_length=2, verbose_name='Cod.Filial')),
                ('nome_empresa', models.CharField(db_comment='Nome da empresa', max_length=40, verbose_name='Nome Empresa')),
                ('nome_filial', models.CharField(db_comment='Nome da Filial', max_length=40, verbose_name='Nome Filial')),
                ('nome_comercial', models.CharField(blank=True, db_comment='Nome da Comercial', max_length=60, null=True, verbose_name='Nome Comercial')),
                ('telefone', models.CharField(blank=True, db_comment='Telefone', max_length=11, null=True, verbose_name='Telefone')),
                ('cnpj', models.CharField(blank=True, db_comment='CNPJ da Empresa', max_length=20, null=True, verbose_name='CNPJ')),
                ('endereco', models.CharField(blank=True, db_comment='Endereço da Empresa', max_length=40, null=True, verbose_name='Endereço')),
                ('end_complemento', models.CharField(blank=True, db_comment='Complemento do Endereço da Empresa', max_length=30, null=True, verbose_name='Complemento Endereço')),
                ('end_bairro', models.CharField(blank=True, db_comment='Bairro do Endereço da Empresa', max_length=25, null=True, verbose_name='Bairro Empresa')),
                ('end_cidade', models.CharField(blank=True, db_comment='Cidade do Endereço da Empresa', max_length=35, null=True, verbose_name='Cidade da Empresa')),
                ('end_cep', models.CharField(blank=True, db_comment='CEP do Endereço da Empresa', max_length=8, null=True, verbose_name='CEP da Empresa')),
                ('end_uf', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AM', 'Amazonas'), ('AP', 'Amapa'), ('BA', 'Bahia'), ('CE', 'Ceara'), ('DF', 'Distrito federal'), ('ES', 'Espirito santo'), ('EX', 'Estrangeiro'), ('GO', 'Goias'), ('MA', 'Maranhao'), ('MG', 'Minas gerais'), ('MS', 'Mato grosso do sul'), ('MT', 'Mato grosso'), ('PA', 'Para'), ('PB', 'Paraiba'), ('PE', 'Pernambuco'), ('PI', 'Piaui'), ('PR', 'Parana'), ('RJ', 'Rio de janeiro'), ('RN', 'Rio grande do norte'), ('RO', 'Rondonia'), ('RR', 'Roraima'), ('RS', 'Rio grande do sul'), ('SC', 'Santa catarina'), ('SE', 'Sergipe'), ('SP', 'Sao paulo'), ('TO', 'Tocantins')], db_comment='Sigla e descrição do estado brasileiro - Estrangeiro: EX', max_length=2, verbose_name='Estado UF')),
                ('cnae', models.CharField(blank=True, db_comment='Código do CNAE da Empresa', max_length=8, null=True, verbose_name='CNAE da Empresa')),
                ('lic_licenca', models.CharField(db_comment='Tipo de Licenciamento da Empresa', max_length=8, verbose_name='Licença da Empresa')),
                ('lic_chave', models.CharField(db_comment='Chave do licenciamento da empresa', max_length=8, verbose_name='Chave do Licenciamento')),
                ('lic_checksum', models.CharField(db_comment='Checksum Licenciamento da Empresa', max_length=8, verbose_name='Checksum Licenciamento')),
                ('lic_validade', models.DateField(db_comment='Validade da chave de acesso da empresa', verbose_name='Validade da chave de acesso')),
            ],
            options={
                'indexes': [models.Index(fields=['cod_empresa', 'cod_filial'], name='tmglobal_em_cod_emp_238780_idx')],
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('usr_empresa', models.CharField(db_comment='Empresa que usuario está alocado', max_length=2, verbose_name='Empresa do Usuário')),
                ('usr_filial', models.CharField(db_comment='Filial que usuario está alocado', max_length=2, verbose_name='Filial do Usuário')),
                ('usr_cargo', models.CharField(choices=[('P', 'Presidente'), ('D', 'Diretor'), ('G', 'Gerente'), ('A', 'Analista'), ('T', 'Analista')], db_comment='Cargo que o usuario está registrado', max_length=1, verbose_name='Cargo do usuário')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
